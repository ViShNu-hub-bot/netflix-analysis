# -*- coding: utf-8 -*-
"""Netflix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KwocLZaxbKdjU8XwB8obeZS4sa0YBTpA
"""

import pandas as pd

data = pd.read_csv("/content/Netflix Userbase.csv")

data.head()

"""**Data cleaning**"""

data.duplicated().sum()

data.isnull().sum()

"""**Determing the number of people who have opted for a Basic, Standard, or Premium subscription type.**"""

print(data[data['Subscription Type'] == 'Basic'].count())

print(data['Subscription Type'].value_counts())

import pandas as pd
import matplotlib.pyplot as plt


subscription_counts = data['Subscription Type'].value_counts()


subscription_counts.plot(kind='bar', color='red', edgecolor='black')


plt.xlabel('Subscription Type')
plt.ylabel('Count')
plt.title('Subscription Type Counts')

plt.show()

"""**Analyzing subscription types according to age groups**"""

bins = [0, 18, 30, 45, 60, 100]
labels = ['0-18', '19-30', '31-45', '46-60', '60+']


data['Age Category'] = pd.cut(data['Age'], bins=bins, labels=labels, right=False)


age_subscription_counts = data.groupby(['Age Category', 'Subscription Type']).size().unstack()

print(age_subscription_counts)

bins = [0, 18, 30, 45, 60, 100]
labels = ['0-18', '19-30', '31-45', '46-60', '60+']


data['Age Category'] = pd.cut(data['Age'], bins=bins, labels=labels, right=False)

age_subscription_counts = data.groupby(['Age Category', 'Subscription Type']).size().unstack()


ax = age_subscription_counts.plot(kind='bar', stacked=True, colormap='viridis', edgecolor='black')


plt.xlabel('Age Category')
plt.ylabel('Count')
plt.title('Subscription Type Distribution Across Age Categories')


plt.legend(title='Subscription Type')


plt.show()

gender_counts = data['Gender'].value_counts()
print("Gender Counts:\n", gender_counts)

gender_subscription_counts = data.groupby(['Gender', 'Subscription Type']).size().unstack()


print(gender_subscription_counts)

"""Analyzing subscription types according to gender"""

gender_subscription_counts = data.groupby(['Gender', 'Subscription Type']).size().unstack()


ax = gender_subscription_counts.plot(kind='bar', colormap='viridis', edgecolor='black')


plt.xlabel('Gender')
plt.ylabel('Count')
plt.title('Subscription Type Distribution Across Genders')


plt.legend(title='Subscription Type')

plt.show()

bins = [0, 18, 30, 45, 60, 100]
labels = ['0-18', '19-30', '31-45', '46-60', '60+']


data['Age Category'] = pd.cut(data['Age'], bins=bins, labels=labels, right=False)


grouped_counts = data.groupby(['Gender', 'Age Category', 'Country', 'Subscription Type']).size().reset_index(name='Count')


print(grouped_counts)

"""Subscription Type Distribution for male and female"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt



selected_gender = 'Male'


filtered_data = grouped_counts[grouped_counts['Gender'] == selected_gender]


plt.figure(figsize=(12, 8))
sns.barplot(x='Country', y='Count', hue='Age Category', data=filtered_data, ci=None)


plt.xlabel('Country')
plt.ylabel('Count')
plt.title(f'Subscription Type Distribution for {selected_gender}s Across Age Categories and Countries')


plt.legend(title='Age Category', bbox_to_anchor=(1, 1))
plt.show()

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt




selected_gender = 'Female'


filtered_data = grouped_counts[grouped_counts['Gender'] == selected_gender]


plt.figure(figsize=(12, 8))
sns.barplot(x='Country', y='Count', hue='Age Category', data=filtered_data, ci=None)


plt.xlabel('Country')
plt.ylabel('Count')
plt.title(f'Subscription Type Distribution for {selected_gender}s Across Age Categories and Countries')


plt.legend(title='Age Category', bbox_to_anchor=(1, 1))
plt.show()

"""Determining the usage duration based on the join date and last payment date."""

data['Join Date'] = pd.to_datetime(data['Join Date'])
data['Last Payment Date'] = pd.to_datetime(data['Last Payment Date'])


data['Usage Duration'] = data['Last Payment Date'] - data['Join Date']


result_table = data[['User ID', 'Gender', 'Join Date', 'Last Payment Date', 'Usage Duration']].copy()


result_table['Usage Duration'] = result_table['Usage Duration'].apply(lambda x: pd.to_timedelta(x))

print(result_table)

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


plt.figure(figsize=(12, 8))
sns.boxplot(x='Gender', y=result_table['Usage Duration'].dt.total_seconds(), data=result_table, palette='Set2')


plt.xlabel('Gender')
plt.ylabel('Usage Duration (seconds)')
plt.title('User Information Visualization')


plt.show()

"""
Identifying subscription types based on the countries"""

country_subscription_counts = data.groupby(['Country', 'Subscription Type']).size().unstack()


print(country_subscription_counts)

"""Calculating the total number of users based on their respective countries"""

sorted_countries_df = sorted_countries.reset_index(name='Total Users')
print(sorted_countries_df)

plt.figure(figsize=(12, 8))
plt.bar(sorted_countries_df['Country'], sorted_countries_df['Total Users'], color='skyblue', edgecolor='black')


plt.xlabel('Country')
plt.ylabel('Total Users')
plt.title('Total Users by Country')


plt.xticks(rotation=45, ha='right')


plt.show()

"""
Counts of Unique Combinations of Device, Subscription Type, and Plan Duration

```

"""

user_device_subscription_plan = data[['User ID', 'Device', 'Subscription Type', 'Plan Duration']]


unique_combinations = user_device_subscription_plan.drop_duplicates()
print(unique_combinations)

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt





user_device_subscription_plan = data[['Device', 'Subscription Type', 'Plan Duration']]


combination_counts = user_device_subscription_plan.value_counts().reset_index(name='Count')


plt.figure(figsize=(12, 8))
sns.barplot(x='Count', y='Device', hue='Subscription Type', data=combination_counts, palette='viridis')


plt.xlabel('Count')
plt.ylabel('Device')
plt.title('Counts of Unique Combinations of Device, Subscription Type, and Plan Duration')


plt.show()